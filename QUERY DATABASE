-- Mulai transaksi
BEGIN;

-- Tabel Users
CREATE TABLE IF NOT EXISTS public.users (
    id_users SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabel Leads
CREATE TABLE IF NOT EXISTS public.leads (
    id_leads SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100),
    phone VARCHAR(20),
    address TEXT,
    created_by INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT leads_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users (id_users)
);

-- Tabel Customers
CREATE TABLE IF NOT EXISTS public.customers (
    id_customers SERIAL PRIMARY KEY,
    id_leads INTEGER,
    start_date DATE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT customers_id_leads_fkey FOREIGN KEY (id_leads) REFERENCES public.leads (id_leads)
);

-- Tabel Products
CREATE TABLE IF NOT EXISTS public.products (
    id_products SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    price NUMERIC(12, 2) NOT NULL,
    bandwidth VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Tabel Projects
CREATE TABLE IF NOT EXISTS public.projects (
    id_projects SERIAL PRIMARY KEY,
    id_leads INTEGER,
    id_sales INTEGER,
    id_manager INTEGER,
    status VARCHAR(20) DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT projects_id_leads_fkey FOREIGN KEY (id_leads) REFERENCES public.leads (id_leads),
    CONSTRAINT projects_id_sales_fkey FOREIGN KEY (id_sales) REFERENCES public.users (id_users),
    CONSTRAINT projects_id_manager_fkey FOREIGN KEY (id_manager) REFERENCES public.users (id_users)
);

-- Tabel Transactions
CREATE TABLE IF NOT EXISTS public.transactions (
    id_transactions SERIAL PRIMARY KEY,
    id_customers INTEGER,
    transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    total_amount NUMERIC(12, 2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT transactions_id_customers_fkey FOREIGN KEY (id_customers) REFERENCES public.customers (id_customers)
);

-- Tabel Transaction Details
CREATE TABLE IF NOT EXISTS public.transaction_details (
    id_transaction_details SERIAL PRIMARY KEY,
    id_transactions INTEGER,
    id_products INTEGER,
    quantity INTEGER DEFAULT 1,
    price NUMERIC(12, 2),
    subtotal NUMERIC(12, 2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT transaction_details_id_transactions_fkey FOREIGN KEY (id_transactions) REFERENCES public.transactions (id_transactions),
    CONSTRAINT transaction_details_id_products_fkey FOREIGN KEY (id_products) REFERENCES public.products (id_products)
);

-- Akhiri transaksi
END;
